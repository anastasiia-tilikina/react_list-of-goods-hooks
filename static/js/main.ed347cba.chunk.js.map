{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","visibleGoods","goods","type","reversed","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","onClick","ALPHABET","classNames","LENGTH","curr","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAyBMC,EAvBoB,SACxBC,EACAC,EACAC,GAEA,IAAMH,EAAY,YAAOC,GAezB,OAbAD,EAAaI,MAAK,SAACC,EAAGC,GACpB,OAAQJ,GACN,IAAK,WACH,OAAOG,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAINL,EAAWH,EAAaS,UAAYT,EAGxBU,CAAkBlB,EAAiBM,EAAUH,GAElE,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAYR,EAASsB,WACpCX,KAAK,SACLS,UAAWG,IACT,SACA,UACA,CAAE,WAAyB,aAAbhB,IANlB,iCAYA,wBACEc,QAAS,kBAAMb,EAAYR,EAASwB,SACpCb,KAAK,SACLS,UAAWG,IACT,SACA,aACA,CAAE,WAAyB,WAAbhB,IANlB,4BAYA,wBACEc,QAAS,kBAAMhB,GAAW,SAAAoB,GAAI,OAAKA,MACnCd,KAAK,SACLS,UAAWG,IACT,SACA,aACA,CAAE,YAAanB,IANnB,qBAae,SAAbG,IAAwBH,GAEtB,wBACEiB,QAAS,WACPb,EAAYR,EAASM,MACrBD,GAAW,IAEbM,KAAK,SACLS,UAAU,4BANZ,sBAaN,6BACGX,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed347cba.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const getReorderedGoods = (\n    goods: string[],\n    type: SortType,\n    reversed: boolean,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (type) {\n        case 'ALPHABET':\n          return a.localeCompare(b);\n\n        case 'LENGTH':\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    return reversed ? visibleGoods.reverse() : visibleGoods;\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SortType.ALPHABET)}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== 'ALPHABET' },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SortType.LENGTH)}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== 'LENGTH' },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(curr => !curr)}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n\n        >\n          Reverse\n        </button>\n\n        {(sortType === 'NONE' && !isReversed)\n          || (\n            <button\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReverse(false);\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(item => (\n          <li data-cy=\"Good\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}